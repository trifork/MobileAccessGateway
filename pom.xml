<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.bfh</groupId>
	<artifactId>i4mi-ipf-hapifhir-gateway</artifactId>
	<version>1.0-SNAPSHOT</version>
	<description>IPF HAPI-FHIR IHE ITI springboot example</description>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.source>1.11</maven.compiler.source>
		<maven.compiler.target>1.11</maven.compiler.target>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>

		<java.version>11</java.version>

		<ipf-version>4.0-SNAPSHOT</ipf-version>
		<camel-version>3.2.0</camel-version>
	</properties>


	<repositories>
		<repository>
			<id>oss-snapshots</id>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>irisa-sumo</id>
			<name>Sumo Irisa Public Maven Repository Group</name>
			<url>https://gazelle.ihe.net/nexus/content/groups/public/</url>
			<layout>default</layout>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<!-- IPF dependencies -->
			<dependency>
				<groupId>org.openehealth.ipf</groupId>
				<artifactId>ipf-dependencies</artifactId>
				<version>${ipf-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Compile -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<!-- <dependency>
		  <groupId>org.apache.camel.springboot</groupId>
		  <artifactId>camel-rest-starter</artifactId>		  
		</dependency>  -->
						
		<!-- IPF -->
		<dependency>
			<groupId>org.openehealth.ipf.boot</groupId>
			<artifactId>ipf-fhir-r4-spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>xpp3</groupId>
					<artifactId>xpp3</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel.springboot</groupId>
			<artifactId>camel-servlet-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openehealth.ipf.platform-camel</groupId>
			<artifactId>ipf-platform-camel-ihe-fhir-r4-pixpdq</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openehealth.ipf.platform-camel</groupId>
			<artifactId>ipf-platform-camel-ihe-fhir-r4-mhd</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openehealth.ipf.platform-camel</groupId>
			<artifactId>ipf-platform-camel-ihe-xds</artifactId>
		</dependency>
		
		<dependency>
            <groupId>org.openehealth.ipf.platform-camel</groupId>
            <artifactId>ipf-platform-camel-ihe-hl7v3</artifactId>            
        </dependency>

		<!-- nsatisfied dependency expressed through field 'config'; nested exception 
			is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: 
			Error creating bean with name 'ipf.fhir-org.openehealth.ipf.boot.fhir.IpfFhirConfigurationProperties': 
			Could not bind properties to 'IpfFhirConfigurationProperties' : prefix=ipf.fhir, 
			ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is 
			javax.validation.NoProviderFoundException: Unable to create a Configuration, 
			because no Jakarta Bean Validation provider could be found. Add a provider 
			like Hibernate Validator (RI) to your classpath. -->
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-validator</artifactId> 
			</dependency> -->

		<dependency>
			<groupId>net.ihe.gazelle</groupId>
			<artifactId>hl7v3-code-jar</artifactId>
			<version>1.3.7</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>5.2.4.Final</version>
		</dependency>
		
		<dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf</artifactId>           
        </dependency>
        
        <dependency>
      <groupId>com.onelogin</groupId>
      <artifactId>java-saml</artifactId>
      <version>2.5.0</version>
  </dependency>
  
  <dependency>
  <groupId>org.apache.cxf</groupId>
  <artifactId>cxf-rt-rs-security-sso-saml</artifactId>
  <version>2.6.1</version>
</dependency>

		<!-- Development tools -->
		<dependency>
			<!-- Project Lombok is a boilerplate code remover and space saver that 
				generates code -->
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<version>${camel-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring</artifactId>
			<version>${camel-version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier>spring-boot</classifier>
							<mainClass>ch.bfh.ti.i4mi.mag.MobileAccessGateway</mainClass>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- tag::plugin[] -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.9</version>
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
				</configuration>
			</plugin>
			<!-- end::plugin[] -->

			<!-- tag::unpack[] -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- end::unpack[] -->


		</plugins>
	</build>

</project>
