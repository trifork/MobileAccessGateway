##:MODULE: SSO_MODULE :##
##:REPOSITORY: BTELL :##
##:MERGED: NO :##
#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  true

# Enable debug mode (to print errors)
onelogin.saml2.debug =  true


#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = https://mobileaccessgateway.pagekite.me

# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = https://mobileaccessgateway.pagekite.me/camel/acs

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = https://mobileaccessgateway.pagekite.me/camel/sls

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
#urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

onelogin.saml2.sp.x509cert =-----BEGIN CERTIFICATE-----MIIEDDCCA3WgAwIBAgICAPgwDQYJKoZIhvcNAQENBQAwRTELMAkGA1UEBhMCQ0gxDDAKBgNVBAoMA0lIRTEoMCYGA1UEAwwfZWhlYWx0aHN1aXNzZS5paGUtZXVyb3BlLm5ldCBDQTAeFw0yMDA5MDcxMjI5MTVaFw0zMDA5MDcxMjI5MTVaMEUxCzAJBgNVBAYTAkNIMQwwCgYDVQQKDANCRkgxKDAmBgNVBAMMH21vYmlsZWFjY2Vzc2dhdGV3YXkucGFnZWtpdGUubWUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDVcbDx/GdnnXMMIw83YS+rkuF4aHM9KTKFLnXFPNR+1GYqGya0B5RIV0u2Jy2U8jaE34R3AemfAS0ANRE+wgnU214e/YMH5dO4tzJQCTdJpzrS0ATIqPbD7lRrfWIOu+29K3ISM10vkE1ib487riPfed0HGxLyd2sEKqt39rquaAmmoTOHZJ7NtleOcDS1R4rYqMcCv0K+Ni0EklB5D+gCa6ByLXvMCVRB1AhgKBlBgSVT37XFlPNmNFTSB+EkcYlYa3vY7fK1E8slStpkKfk498xp4hI833BeBaHLm44IUfWZuqng0YIlm7hoFMmJJV8dtYxY5yuxNSUudFNLTAYtAgMBAAGjggGFMIIBgTAZBgNVHREEEjAQgg50ZXN0LmFoZGlzLmNoLzBKBgNVHR8EQzBBMD+gPaA7hjlodHRwczovL2VoZWFsdGhzdWlzc2UuaWhlLWV1cm9wZS5uZXQvZ3NzL2NybC8yMi9jYWNybC5jcmwwSAYJYIZIAYb4QgEEBDsWOWh0dHBzOi8vZWhlYWx0aHN1aXNzZS5paGUtZXVyb3BlLm5ldC9nc3MvY3JsLzIyL2NhY3JsLmNybDBIBglghkgBhvhCAQMEOxY5aHR0cHM6Ly9laGVhbHRoc3Vpc3NlLmloZS1ldXJvcGUubmV0L2dzcy9jcmwvMjIvY2FjcmwuY3JsMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFABW2iOWKtEecvC1HYHuEAIVcT/OMB8GA1UdIwQYMBaAFCiX793eMVhsVvKGRuIR5D44cV8vMBEGCWCGSAGG+EIBAQQEAwIGQDAOBgNVHQ8BAf8EBAMCBPAwEwYDVR0lBAwwCgYIKwYBBQUHAwEwDQYJKoZIhvcNAQENBQADgYEARw3uGwmgDJyqvBBlUncHZszPjnITV5TWFsA/iINSsBkT/KBPMivGNlAl4v2U5Bl7267Ny9IXgR8KODcOo4yAxQTWlCt2R4Oc+8WJEikzrAr0/PvqI5pVcfJENMv8nnuYGI/2VQvNYBqnZgZmLt0YFF5jmCSnRm4yWNZ+kD9S3Sw=-----END CERTIFICATE-----

# Requires Format PKCS#8   BEGIN PRIVATE KEY	     
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey =-----BEGIN PRIVATE KEY-----MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDVcbDx/GdnnXMMIw83YS+rkuF4aHM9KTKFLnXFPNR+1GYqGya0B5RIV0u2Jy2U8jaE34R3AemfAS0ANRE+wgnU214e/YMH5dO4tzJQCTdJpzrS0ATIqPbD7lRrfWIOu+29K3ISM10vkE1ib487riPfed0HGxLyd2sEKqt39rquaAmmoTOHZJ7NtleOcDS1R4rYqMcCv0K+Ni0EklB5D+gCa6ByLXvMCVRB1AhgKBlBgSVT37XFlPNmNFTSB+EkcYlYa3vY7fK1E8slStpkKfk498xp4hI833BeBaHLm44IUfWZuqng0YIlm7hoFMmJJV8dtYxY5yuxNSUudFNLTAYtAgMBAAECgf8YdfpVDGcYmqsncWSrJQNr5j/pH3isBerAfjRx6exhQjnrkd4srPz6xdknZQMyZTVaSKy8Mvgl4qYFmIfHDxPNmJJ/1Q3B+9S8aVFPeOwVl5hmLpZdwv9XfHTsgkiYq3DTZn3OCRxsUz8hqq7SWQhDareayc6TAn5jDq35ygVIDd9nbstpHql+9xMmbb17Sv2AmazVRpCQkBPYQSKdnfKMZmrSBH/hW/Jm1Ko3tV+1uGtCerypB8bFqmK2cKpUsC/PaAk0F+Rsm6XoN/zYjm9VC1jfz1Z6kF6LO0bZZoZv85vdLESMmjWEZ78rQPLHNcG/BA78dJAFvNxhaVuaumkCgYEA/iV831qtBO+bEw/kgxcE1/UFEtjJgckWxg1dwoygy9ZBOr6Pz9afpifx+icYwcygsaJXrI6li+WG9MVNlNt0NRg8p6MtA6dYxqUviSLq7+jm4kWYuR3Ynj8DB5INnOQDW8NP9kXZKUd6CXn/XWehCdnDSEZM9tLYajO+mKWkbbUCgYEA1wA1dX4tqcvNJPLGI5R53ZwlCtkplri50HtuN4rDQDLitWPbCmVCIBVoVvGpz8Oc/GaUgy701STKy78z++byZZZ//LLkq2dLxiIOHsYv4d0kx2+F/WtWKl0B25rxddRPOYnJ68vWp6PGU02M5FiYr/xm8g7jb/ZN1k5vo6qtwZkCgYBIeWZHx3Lpom6FnBWdMHZII25D9qBYK4EcD3m6XiIIntvRJcCbE2hJmMCPhpCvy2vT3CjGY5Nf9p9qs80w8vgLoBLD92uBzDorw7VvlQ6MRc15n0EzIQjB79QsV4EcSYWPqH3oC/kmpWRuyWSCPWgWCAyBUtLl3DCs8H6cxzfBtQKBgQCTEcN/0YYu5gg4RBGheQk7vHniR9aZEVeZ8zTbrYIOQkCuT9Yf8FAhXkN3ZewBARA733ernM1Bl99ZLDvFDp+1OhPmqgCd9xTwPY9nIa7TU9C60+DWDzxr0h9ZN04AifB/rW+Aank1R2R8y0mbUbdwerl4zxJpHhT0icb4L+KX0QKBgQCqGZ7RfJmDeYz93co5D1LTD1ehxxRHwOZUuTzobZEP9L/hvK+VavbYY3jBZpLUA4HIlYGj92hI8efbtN2wkxLkyDLNgiC9uHG7odDnYPItMIr73MYGRtW0b8wB+hu+9vCPERoUzXZhV+Sb1e/ZMvyJyit143f9VEdsOdruc3A+xg==-----END PRIVATE KEY-----



# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid =https://ehealthsuisse.ihe-europe.net/idp/shibboleth

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url =https://ehealthsuisse.ihe-europe.net:4443/idp/profile/SAML2/Redirect/SSO
# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url =https://ehealthsuisse.ihe-europe.net:4443/idp/profile/SAML2/Redirect/SLO

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url =

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
onelogin.saml2.idp.x509cert =MIIDjTCCAvagAwIBAgICAI0wDQYJKoZIhvcNAQENBQAwRTELMAkGA1UEBhMCQ0gxDDAKBgNVBAoMA0lIRTEoMCYGA1UEAwwfZWhlYWx0aHN1aXNzZS5paGUtZXVyb3BlLm5ldCBDQTAeFw0xOTA0MDExMjQxMThaFw0yOTA0MDExMjQxMThaMCkxCzAJBgNVBAYTAkNIMQwwCgYDVQQKDANJSEUxDDAKBgNVBAMMA0lEUDCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAhmmz4AEhbH+80Nf5QLjvP9/Cukcvrk5ONVZ9hQjz2OeBGBiW6TdKrwX6GIY0ue6zN6mRFuRycKi4A0aVWsO+s4ByQPsnnXx4JKXYGkoSny7hgyxHxsEHiBZlMQLoqJ3jKYAR1SgLfdBEghAaDFEKF8hp8hwBMAp/WJY7eaZpXS0CAwEAAaOCAaYwggGiMB0GA1UdEQQWMBSCEmlkcC5paGUtZXVyb3BlLm5ldDBKBgNVHR8EQzBBMD+gPaA7hjlodHRwczovL2VoZWFsdGhzdWlzc2UuaWhlLWV1cm9wZS5uZXQvZ3NzL2NybC8yMi9jYWNybC5jcmwwSAYJYIZIAYb4QgEEBDsWOWh0dHBzOi8vZWhlYWx0aHN1aXNzZS5paGUtZXVyb3BlLm5ldC9nc3MvY3JsLzIyL2NhY3JsLmNybDBIBglghkgBhvhCAQMEOxY5aHR0cHM6Ly9laGVhbHRoc3Vpc3NlLmloZS1ldXJvcGUubmV0L2dzcy9jcmwvMjIvY2FjcmwuY3JsMAkGA1UdEwQCMAAwDgYDVR0PAQH/BAQDAgTwMBEGCWCGSAGG+EIBAQQEAwIF4DAdBgNVHQ4EFgQU4Kj/ojx2cO5W9/hOlSFUVh8jT1gwHwYDVR0jBBgwFoAUKJfv3d4xWGxW8oZG4hHkPjhxXy8wMwYDVR0lBCwwKgYIKwYBBQUHAwIGCCsGAQUFBwMEBgorBgEEAYI3FAICBggrBgEFBQcDATANBgkqhkiG9w0BAQ0FAAOBgQAvAQf3kRfC5hMAWFuKZKV7fOLklivFoELOl96i9O29i5wCEeiClubfH9X7nnfvKukhWdi0MFkRZqgLRXN1iDY6iKC6MnZHTUN6qgskn6m3S0rsRXN8/My/EM+lmcFR1/IWhHtW+aERI0XoXR8GrY/QSmn3TWgHfO6qLdrUEfvVew==

# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
# onelogin.saml2.idp.certfingerprint = 
# onelogin.saml2.idp.certfingerprint_algorithm = sha1


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = true

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = true

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = true

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_messages_signed = true

# Indicates a requirement for the <saml:Assertion> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = true

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key) 
onelogin.saml2.security.sign_metadata = true

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = true

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest
# You can set multiple values (comma separated them)
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact


# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2001/04/xmldsig-more#rsa-sha256

# Organization
onelogin.saml2.organization.name = BFH 
onelogin.saml2.organization.displayname = BFH
onelogin.saml2.organization.url = https://www.bfh.ch/
onelogin.saml2.organization.lang = 

# Contacts
onelogin.saml2.contacts.technical.given_name = Alexander Kreutz
onelogin.saml2.contacts.technical.email_address = alexander@kreutz-info.de
onelogin.saml2.contacts.support.given_name = Alexander Kreutz
onelogin.saml2.contacts.support.email_address = alexander@kreutz-info.de
